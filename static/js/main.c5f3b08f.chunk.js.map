{"version":3,"sources":["Keypad.js","Keypad_table.js","App.js","serviceWorker.js","index.js"],"names":["Keypad","createButton","key","className","Keypad_table","id","style","fontSize","height","rowspan","colspan","App","useState","display","setDisplay","calc","setCalc","result","setResult","onClick","onSubmit","e","preventDefault","console","log","type","value","onChange","target","format","evaluate","precision","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"0RAoJeA,IChJTC,EAAe,SAACC,GACpB,OAAO,4BAAQC,UAAU,UAAUD,IA+EtBE,MA5Ef,WACE,OACE,oCACE,+BACE,4BACE,wBAAIC,GAAG,QAAQF,UAAU,gBAAgBG,MAAO,CAAEC,SAAU,QACzDN,EAAa,OAEhB,wBAAIE,UAAU,iBAAiBF,EAAa,MAC5C,wBAAII,GAAG,SAASF,UAAU,iBACvBF,EAAa,SAEhB,wBAAII,GAAG,WAAWF,UAAU,iBACzBF,EAAa,UAGlB,4BACE,wBAAII,GAAG,QAAQF,UAAU,kBACtBF,EAAa,MAEhB,wBAAII,GAAG,QAAQF,UAAU,kBACtBF,EAAa,MAEhB,wBAAII,GAAG,OAAOF,UAAU,kBACrBF,EAAa,MAEhB,wBAAII,GAAG,WAAWF,UAAU,cACzBF,EAAa,OAGlB,4BACE,wBAAII,GAAG,OAAOF,UAAU,kBACrBF,EAAa,MAEhB,wBAAII,GAAG,OAAOF,UAAU,kBACrBF,EAAa,MAEhB,wBAAII,GAAG,MAAMF,UAAU,kBACpBF,EAAa,MAEhB,wBAAII,GAAG,MAAMF,UAAU,cACpBF,EAAa,OAGlB,4BACE,wBAAII,GAAG,MAAMF,UAAU,kBACpBF,EAAa,MAEhB,wBAAII,GAAG,MAAMF,UAAU,kBACpBF,EAAa,MAEhB,wBAAII,GAAG,QAAQF,UAAU,kBACtBF,EAAa,MAEhB,wBACEI,GAAG,SACHC,MAAO,CAAEE,OAAQ,SACjBC,QAAQ,IACRN,UAAU,cAETF,EAAa,OAGlB,4BACE,wBAAII,GAAG,OAAOK,QAAQ,IAAIP,UAAU,kBACjCF,EAAa,MAEhB,wBAAII,GAAG,UAAUF,UAAU,kBACxBF,EAAa,UChCXU,MArCf,WAAgB,IAAD,EACiBC,mBAAS,mBAD1B,mBACNC,EADM,KACGC,EADH,OAEWF,mBAAS,KAFpB,mBAENG,EAFM,KAEAC,EAFA,OAGeJ,mBAAS,GAHxB,mBAGNK,EAHM,KAGEC,EAHF,KAab,OACE,yBAAKf,UAAU,OACb,kBAAC,EAAD,MACA,4BAAQA,UAAU,cAEhB,8EACA,kDAAwBU,GACxB,4BAAQM,QAAS,kBAAML,EAAW,qBAAlC,aACA,4BAAQK,QAAS,kBAAML,EAAW,qBAAlC,SACA,2BAAI,OAEN,0BAAMM,SAnBW,SAACC,GACpBA,EAAEC,iBACFC,QAAQC,IAAR,gBAAqBH,IACrBE,QAAQC,IAAIH,GACZE,QAAQC,IAAIT,GACZG,EAAUH,KAeN,2BACEU,KAAK,OACLC,MAAOX,EACPY,SAAU,SAACN,GAAD,OAAOL,EAAQK,EAAEO,OAAOF,UAEpC,2BAAOD,KAAK,SAASC,MAAM,OAE7B,2BAAIG,aAAOC,YAASb,GAAS,CAAEc,UAAW,QC3B5BC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL1B,QAAQ0B,MAAMA,EAAMC,c","file":"static/js/main.c5f3b08f.chunk.js","sourcesContent":["import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport \"./Keypad.css\";\n\nfunction Keypad() {\n  return (\n    <>\n      <div\n        className=\"btn-group-vertical ml-5 mt-5\"\n        role=\"group\"\n        aria-label=\"Basic example\"\n      >\n        {/* <input className=\"text-center form-control-lg mb-2\" id=\"code\" /> */}\n        <div className=\"btn-group\">\n          <Button\n            type=\"Button\"\n            className=\"btn btn-secondary btn-outline-light py-3 btn-custom\"\n          >\n            C\n          </Button>\n          <Button\n            type=\"Button\"\n            className=\"btn btn-secondary btn-outline-light py-3 btn-custom\"\n          >\n            /\n          </Button>\n          <Button\n            type=\"Button\"\n            className=\"btn btn-secondary btn-outline-light py-3 btn-custom\"\n          >\n            *\n          </Button>\n          <Button\n            type=\"Button\"\n            className=\"btn btn-secondary btn-outline-light py-3 btn-custom\"\n          >\n            b\n          </Button>\n        </div>\n        <div className=\"btn-group\">\n          <Button\n            type=\"Button\"\n            className=\"btn btn-secondary btn-outline-light py-3 btn-custom\"\n          >\n            1\n          </Button>\n          <Button\n            type=\"Button\"\n            className=\"btn btn-secondary btn-outline-light py-3 btn-custom\"\n          >\n            2\n          </Button>\n          <Button\n            type=\"Button\"\n            className=\"btn btn-secondary btn-outline-light py-3 btn-custom\"\n          >\n            3\n          </Button>\n          <Button\n            type=\"Button\"\n            className=\"btn btn-secondary btn-outline-light py-3 btn-custom\"\n          >\n            -\n          </Button>\n        </div>\n        <div className=\"btn-group\">\n          <Button\n            type=\"Button\"\n            className=\"btn btn-secondary btn-outline-light py-3 btn-custom\"\n          >\n            4\n          </Button>\n          <Button\n            type=\"Button\"\n            className=\"btn btn-secondary btn-outline-light py-3 btn-custom\"\n          >\n            5\n          </Button>\n          <Button\n            type=\"Button\"\n            className=\"btn btn-secondary btn-outline-light py-3 btn-custom\"\n          >\n            6\n          </Button>\n          <Button\n            type=\"Button\"\n            className=\"btn btn-secondary btn-outline-light py-3 btn-custom\"\n          >\n            +\n          </Button>\n        </div>\n        <div className=\"btn-group\">\n          <Button\n            type=\"Button\"\n            className=\"btn btn-secondary btn-outline-light py-3 btn-custom\"\n          >\n            7\n          </Button>\n          <Button\n            type=\"Button\"\n            className=\"btn btn-secondary btn-outline-light py-3 btn-custom\"\n          >\n            8\n          </Button>\n          <Button\n            type=\"Button\"\n            className=\"btn btn-secondary btn-outline-light py-3 btn-custom\"\n          >\n            9\n          </Button>\n          <Button\n            type=\"Button\"\n            className=\"btn btn-secondary btn-outline-light py-3 btn-customV\"\n          >\n            =\n          </Button>\n        </div>\n        <div className=\"btn-group\">\n          <Button\n            type=\"Button\"\n            className=\"btn btn-secondary btn-outline-light py-3 btn-custom2\"\n          >\n            0\n          </Button>\n          {/* <Button\n            type=\"Button\"\n            className=\"btn btn-secondary btn-outline-light py-3 btn-custom\"\n          >\n            0\n          </Button> */}\n          <Button\n            type=\"Button\"\n            className=\"btn btn-secondary btn-outline-light py-3 btn-custom\"\n          >\n            .\n          </Button>\n          {/* <Button\n            type=\"Button\"\n            className=\"btn btn-secondary btn-outline-light py-3 btn-custom\"\n          >\n            =\n          </Button> */}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Keypad;\n","import React from \"react\";\n// import { Button } from \"react-bootstrap\";\nimport \"./Keypad_table.css\";\n\nconst createButton = (key) => {\n  return <button className=\"keypad\">{key}</button>;\n};\n\nfunction Keypad_table() {\n  return (\n    <>\n      <table>\n        <tr>\n          <td id=\"clear\" className=\"btn-dark-grey\" style={{ fontSize: \"90%\" }}>\n            {createButton(`AC`)}\n          </td>\n          <td className=\"btn-dark-grey\">{createButton(`%`)}</td>\n          <td id=\"divide\" className=\"btn-dark-grey\">\n            {createButton(`รท`)}\n          </td>\n          <td id=\"multiply\" className=\"btn-dark-grey\">\n            {createButton(`ร`)}\n          </td>\n        </tr>\n        <tr>\n          <td id=\"seven\" className=\"btn-light-grey\">\n            {createButton(`7`)}\n          </td>\n          <td id=\"eight\" className=\"btn-light-grey\">\n            {createButton(`8`)}\n          </td>\n          <td id=\"nine\" className=\"btn-light-grey\">\n            {createButton(`9`)}\n          </td>\n          <td id=\"subtract\" className=\"btn-orange\">\n            {createButton(`-`)}\n          </td>\n        </tr>\n        <tr>\n          <td id=\"four\" className=\"btn-light-grey\">\n            {createButton(`4`)}\n          </td>\n          <td id=\"five\" className=\"btn-light-grey\">\n            {createButton(`5`)}\n          </td>\n          <td id=\"six\" className=\"btn-light-grey\">\n            {createButton(`6`)}\n          </td>\n          <td id=\"add\" className=\"btn-orange\">\n            {createButton(`+`)}\n          </td>\n        </tr>\n        <tr>\n          <td id=\"one\" className=\"btn-light-grey\">\n            {createButton(`1`)}\n          </td>\n          <td id=\"two\" className=\"btn-light-grey\">\n            {createButton(`2`)}\n          </td>\n          <td id=\"three\" className=\"btn-light-grey\">\n            {createButton(`3`)}\n          </td>\n          <td\n            id=\"equals\"\n            style={{ height: \"120px\" }}\n            rowspan=\"2\"\n            className=\"btn-orange\"\n          >\n            {createButton(`=`)}\n          </td>\n        </tr>\n        <tr>\n          <td id=\"zero\" colspan=\"2\" className=\"btn-light-grey\">\n            {createButton(`0`)}\n          </td>\n          <td id=\"decimal\" className=\"btn-light-grey\">\n            {createButton(`.`)}\n          </td>\n        </tr>\n      </table>\n    </>\n  );\n}\n\nexport default Keypad_table;\n","import React, { useState } from \"react\";\nimport { evaluate, format } from \"mathjs\";\n// import logo from \"./logo.svg\";\n// import \"./App.css\";\nimport Keypad from \"./Keypad\";\nimport Keypad_table from \"./Keypad_table\";\n\nfunction App() {\n  const [display, setDisplay] = useState(\"initial display\");\n  const [calc, setCalc] = useState(\"1\");\n  const [result, setResult] = useState(0);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(`calc= ${e}`);\n    console.log(e);\n    console.log(calc);\n    setResult(calc);\n  };\n\n  return (\n    <div className=\"App\">\n      <Keypad_table />\n      <header className=\"App-header\">\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n        <p>This will become a calculator... at some point.</p>\n        <p>this is displaying: {display}</p>\n        <button onClick={() => setDisplay(\"updated display\")}>Click me!</button>\n        <button onClick={() => setDisplay(\"initial display\")}>Reset</button>\n        <p>{3 + 5 * 6 - 2 / 4}</p>\n      </header>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={calc}\n          onChange={(e) => setCalc(e.target.value)}\n        />\n        <input type=\"submit\" value=\"=\" />\n      </form>\n      <p>{format(evaluate(result), { precision: 14 })}</p>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}